[{"D:\\Mamender Work\\reacthook\\src\\index.js":"1","D:\\Mamender Work\\reacthook\\src\\reportWebVitals.js":"2","D:\\Mamender Work\\reacthook\\src\\App.js":"3"},{"size":500,"mtime":1623132652887,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1623132652887,"results":"6","hashOfConfig":"5"},{"size":1913,"mtime":1626940791133,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lwyhgw",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\Mamender Work\\reacthook\\src\\index.js",[],"D:\\Mamender Work\\reacthook\\src\\reportWebVitals.js",[],"D:\\Mamender Work\\reacthook\\src\\App.js",["15","16"],"//import logo from './logo.svg';\n//import './App.css';\n\nimport React, { Component, useState, useEffect } from 'react';\n\nconst App = () =>{\n  const [news, setNews] = useState([]);\n  const [searchResult, setsearchResult] = useState('react');\n\n  const newFetch = () =>{\n    fetch(`http://hn.algolia.com/api/v1/search?query=${searchResult}`)\n    .then(result => result.json())\n    // .then(data => console.log(data))\n    // .then(data => console.log('test'))\n    .then(data => setNews(data.hits))\n    .catch( error => console.log(error));\n  }\nuseEffect(()=>{\n  newFetch();\n}, [searchResult])\n\nconst changeSerachResult = (e) =>{\n  setsearchResult(e.target.value);\n}\n\n  return(\n    <div>\n      <h1>News</h1>\n      <form>\n        <input type=\"text\" value={searchResult} onChange={changeSerachResult} />\n        <button>Serach</button>\n      </form>\n      {\n        //news.map((n,i)=>(<p key={i}>{n.title}</p>))\n        news.map((n, i) => (<p key={i}>{n.title}</p>))\n    \n    }\n    </div>\n  )\n}\n\n// const App = () => {\n//   const [count, setCount] = useState(0);\n\n//   const increment = () =>{\n//     setCount(count + 1);\n//   }\n// useEffect( () =>{\n//   document.title = `clicked ${count} times`\n// })\n  \n\n//   return (\n//     <div>\n//       <h2>Counter App</h2>\n//       <button onClick={increment}>Clicked {count} times</button>\n//     </div>\n//   );\n\n// }\n\n// class App extends Component{\n//   state ={\n//     count : 0\n//   };\n// increment = () =>{\n//   this.setState({\n//     count: this.state.count + 1,\n//   });\n// }\n\n// componentDidMount(){\n//   document.title = `click ${this.state.count} times`\n// }\n\n// componentDidUpdate(){\n//   document.title = `click ${this.state.count} times`\n// }\n\n//   render(){\n//     return(\n//       <div>\n//         <h2>Counter App</h2>\n//         <button onClick={this.increment}>Clicked {this.state.count} times</button>\n//       </div>\n\n//     )\n//   }\n// }\n\nexport default App;\n",{"ruleId":"17","severity":1,"message":"18","line":4,"column":17,"nodeType":"19","messageId":"20","endLine":4,"endColumn":26},{"ruleId":"21","severity":1,"message":"22","line":20,"column":4,"nodeType":"23","endLine":20,"endColumn":18,"suggestions":"24"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newFetch'. Either include it or remove the dependency array.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [newFetch, searchResult]",{"range":"28","text":"29"},[572,586],"[newFetch, searchResult]"]