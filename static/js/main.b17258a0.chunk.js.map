{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","news","setNews","searchResult","setsearchResult","useEffect","httpGet","window","location","protocol","fetch","then","result","json","data","hits","catch","error","console","log","newFetch","type","value","onChange","e","target","map","n","i","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKA2FeA,EAtFH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBAAS,SAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAWFC,qBAAU,YATS,WACf,IAAIC,EAAUC,OAAOC,SAASC,SAC9BC,MAAM,GAAD,OAAIJ,EAAJ,iDAAoDH,IACxDQ,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UAGtBF,MAAK,SAAAG,GAAI,OAAIZ,EAAQY,EAAKC,SAC1BC,OAAO,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAG/BG,KACC,CAACjB,IAMF,OACE,gCACE,sCACA,iCACE,uBAAOkB,KAAK,OAAOC,MAAOnB,EAAcoB,SARrB,SAACC,GAC1BpB,EAAgBoB,EAAEC,OAAOH,UAQnB,+CAIArB,EAAKyB,KAAI,SAACC,EAAGC,GAAJ,OAAW,4BAAYD,EAAEE,OAAND,UCvBrBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b17258a0.chunk.js","sourcesContent":["//import logo from './logo.svg';\n//import './App.css';\n\nimport React, { Component, useState, useEffect } from 'react';\n\nconst App = () =>{\n  const [news, setNews] = useState([]);\n  const [searchResult, setsearchResult] = useState('react');\n\n  const newFetch = () =>{\n    let httpGet = window.location.protocol;\n    fetch(`${httpGet}://hn.algolia.com/api/v1/search?query=${searchResult}`)\n    .then(result => result.json())\n    // .then(data => console.log(data))\n    // .then(data => console.log('test'))\n    .then(data => setNews(data.hits))\n    .catch( error => console.log(error));\n  }\nuseEffect(()=>{\n  newFetch();\n}, [searchResult])\n\nconst changeSerachResult = (e) =>{\n  setsearchResult(e.target.value);\n}\n\n  return(\n    <div>\n      <h1>News</h1>\n      <form>\n        <input type=\"text\" value={searchResult} onChange={changeSerachResult} />\n        <button>Serach</button>\n      </form>\n      {\n        //news.map((n,i)=>(<p key={i}>{n.title}</p>))\n        news.map((n, i) => (<p key={i}>{n.title}</p>))\n    \n    }\n    </div>\n  )\n}\n\n// const App = () => {\n//   const [count, setCount] = useState(0);\n\n//   const increment = () =>{\n//     setCount(count + 1);\n//   }\n// useEffect( () =>{\n//   document.title = `clicked ${count} times`\n// })\n  \n\n//   return (\n//     <div>\n//       <h2>Counter App</h2>\n//       <button onClick={increment}>Clicked {count} times</button>\n//     </div>\n//   );\n\n// }\n\n// class App extends Component{\n//   state ={\n//     count : 0\n//   };\n// increment = () =>{\n//   this.setState({\n//     count: this.state.count + 1,\n//   });\n// }\n\n// componentDidMount(){\n//   document.title = `click ${this.state.count} times`\n// }\n\n// componentDidUpdate(){\n//   document.title = `click ${this.state.count} times`\n// }\n\n//   render(){\n//     return(\n//       <div>\n//         <h2>Counter App</h2>\n//         <button onClick={this.increment}>Clicked {this.state.count} times</button>\n//       </div>\n\n//     )\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}